<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.TeamFoundation.VersionControl.Client</name>
	</assembly>
	<members>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.AffectedTeamProjects.TeamProjectPaths">
			<returns>Returns an array of the team projects affected by the checked items.</returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem.GetRequestedItem">
			<returns>The requested history tree item.</returns>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset">
			<summary>Represents a Changeset</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Changeset.ToString">
			<summary>A representation of the changeset in the form of a string.</summary>
			<returns>A string that represents the changeset.</returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Changeset.Update">
			<summary>Updates changeset metadata on the server.</summary>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.ArtifactUri">
			<summary>Gets the artifact URI associated with a changeset.</summary>
			<returns>A Uri value that contains the URI of the changeset.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.Changes">
			<summary>Gets or sets changes in a changeset.</summary>
			<returns>A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Change"></see> instance that contains the changes in the changeset.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.ChangesetId">
			<summary>Gets or sets the identifier of a changeset.</summary>
			<returns>An integer value that contains the identifier.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.CheckinNote">
			<summary>Gets or sets an informational note associated with a changeset check-in.</summary>
			<returns>A <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.CheckinNote"></see> value.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.Comment">
			<summary>Gets or sets a comment for a changeset.</summary>
			<returns>A string that contains the comment.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.Committer">
			<summary>Gets or sets the identity that commits a changeset.</summary>
			<returns>The name of the identity.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.CreationDate">
			<summary>Gets or sets the date when a changeset is created.</summary>
			<returns>A <see cref="T:System.DateTime"></see> value that contains the date of creating of the changeset.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.Owner">
			<summary>Gets or sets the owner of a changeset.</summary>
			<returns>A string that contains the changeset owner's name.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.PolicyOverride">
			<summary>Gets or sets a policy override.</summary>
			<returns>A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo"></see> instance that defines the policy override.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.WorkItems">
			<summary>Gets work items associated with this changeset.</summary>
			<returns>An array of <see cref="T:Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem"></see> instances associated with the changeset.</returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec.#ctor(System.Int32)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec"></see> class, based on the specified changeset.</summary>
			<param name="Changeset">The changeset ID</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec"></see> class, based on the specified changeset.</summary>
			<param name="changeset">The changeset ID</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec.Equals(System.Object)">
			<param name="obj">The object to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec.ParseChangesetNumber(System.String)">
			<summary>Parse the string as a changeset number. </summary>
			<returns>The changeset number.</returns>
			<param name="changeset">The changeset number to parse</param>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.ChangeType">
			<summary>Specifies constants that define the type of a change.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Add">
			<summary>An artifact is added.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Branch">
			<summary>A project is branched.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Delete">
			<summary>An artifact is deleted.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Edit">
			<summary>An artifact was edited.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Encoding">
			<summary>An encoding was changed.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Lock">
			<summary>An artifact was locked.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Merge">
			<summary>Projects were merged.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.None">
			<summary>No change.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Rename">
			<summary>An artifact was renamed.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Undelete">
			<summary>A delete operation was reversed.</summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec">
			<summary>Represents a version specification format for date values.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.#ctor(System.DateTime)">
			<summary>Initializes a new instance of a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec"></see> with a specified date.</summary>
			<param name="date">A <see cref="T:System.DateTime"></see> value containing the date.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.#ctor(System.DateTime,System.String)">
			<summary>Initializes a new instance of a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec"></see> with a specified date and string.</summary>
			<param name="originalText">A string containing the original text.</param>
			<param name="date">A <see cref="T:System.DateTime"></see> value containing the date.</param>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.Identifier">
			<summary>The identifier of the date version specification.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.Equals(System.Object)">
			<summary>Checks if DateVersionSpec instances are identical.</summary>
			<returns>True if they are same, or else False.</returns>
			<param name="obj">The object to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.GetHashCode">
			<summary>A hash code value for the date version specification.</summary>
			<returns>An integer value containing the hash code.</returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.ToString">
			<summary>A string representation of the date version specification.</summary>
			<returns>A string containing the date version specification.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.Date">
			<summary>Gets or set the date.</summary>
			<returns>A <see cref="T:System.DateTime"></see> value containing the date.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.OriginalText">
			<summary>Gets or sets the original text.</summary>
			<returns>A string containing the original text.</returns>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.GetOptions">
			<summary>Defined constants that define how get operations should behave.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetOptions.GetAll">
			<summary>Get all files, not just those that are out of date.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetOptions.None">
			<summary>No options specified.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetOptions.Overwrite">
			<summary>Overwrite writable files that are in the way of versioned items.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetOptions.Preview">
			<summary>Execute get without modifying the disk.</summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.GetStatus">
			<summary>Contains information about the results of a get operation.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.GetFailures">
			<summary>Obtains the failures generated by an invocation of get.</summary>
			<returns>Returns an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Failure"></see> objects that contain the list of failures for this get operation.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.HaveResolvableWarnings">
			<summary>Gets information on whether the get contained warnings that can be resolved.</summary>
			<returns>true if at least one warning is resolvable; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.NoActionNeeded">
			<summary>Gets information on whether the get resulted in any actions.</summary>
			<returns>true when the get action had nothing to do (the server returned no operations and no failures); otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.NumConflicts">
			<summary>The number of conflicts encountered by the get operation.</summary>
			<returns>The number of conflicts.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.NumFailures">
			<summary>Returns the number of failures from a get operation.</summary>
			<returns>The number of failures.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.NumOperations">
			<summary>The number of operations returned by the server.</summary>
			<returns>The number of operations.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.NumWarnings">
			<summary>The number of warnings encountered by the get operation.</summary>
			<returns>The number of warnings.</returns>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs">
			<summary>Represents event arguments for the Getting event.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.GetMessage(System.String,System.String@)">
			<summary>Converts this event into a displayable message.</summary>
			<returns>A string that represents the message.</returns>
			<param name="error">The error message, if any, that is also a result of this event.</param>
			<param name="targetName">The path to the target, optionally relative to another directory.</param>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.ChangeType">
			<summary>Gets the type of the operation.</summary>
			<returns>A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangeType"></see> containing the change type.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.DeletionId">
			<summary>Gets the deletion ID of the Get action</summary>
			<returns>Returns the deletion ID of the Get action.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.DiskUpdateAttempted">
			<summary>Gets whether the disk update was attempted.</summary>
			<returns>true if the disk update was attempted; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.IsDelete">
			<summary>Gets whether the operation will delete the item.</summary>
			<returns>True if the item will be deleted.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.IsLatest">
			<summary>Gets whether this operation is getting the latest version of the item.</summary>
			<returns>true if the item is the latest version; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.ItemId">
			<summary>Gets the identifier of the item that was operated on.</summary>
			<returns>The item identifier.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.ItemType">
			<summary>Gets the type of the item that was operated on.</summary>
			<returns>An <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemType"></see> containing the item type.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.ServerItem">
			<summary>Gets the server item being operated on.</summary>
			<returns>A string that contains the server item.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.SourceLocalItem">
			<summary>Gets the path to the source item.</summary>
			<returns>A string that contains the path to the source item.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.Status">
			<summary>Gets the status of an operation.</summary>
			<returns>A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus"></see> containing the status.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.TargetLocalItem">
			<summary>Gets the path to the target item.</summary>
			<returns>A string that contains the path to the target item.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.Version">
			<summary>Gets the version of the item in the Get operation.</summary>
			<returns>Returns the version number of the item in the Get operation.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.Workspace">
			<summary>Gets the workspace that was updated.</summary>
			<returns>A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see> containing the updated workspace.</returns>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.Item">
			<summary>Represents an item.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Item.DownloadFile(System.String)">
			<summary>Downloads the content for this version of the item.</summary>
			<param name="localFileName">The location where the downloaded file contents are to be saved.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Item.ToString">
			<summary>Converts the item to a string representation.</summary>
			<returns>A string representing the item.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ArtifactUri">
			<summary>Gets the Artifact URI of a versioned item</summary>
			<returns>The <see cref="T:System.Uri"></see> of the Artifact.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ArtifactUriLatestItemVersion">
			<summary>Gets the Artifact URI of the latest item version.</summary>
			<returns>The <see cref="T:System.Uri"></see> of the Artifact.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ChangesetId">
			<summary>Gets the identifier for an item changeset.</summary>
			<returns>An integer containing the changeset id.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.CheckinDate">
			<summary>Gets the item check-in date.</summary>
			<returns>A <see cref="T:System.DateTime"></see> containing the check-in date.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.Comparer">
			<summary>Gets a Comparer object for a version control item specification.</summary>
			<returns>A <see cref="T:System.Collections.IComparer"></see> containing the comparer.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ContentLength">
			<summary>Gets the content length of an item.</summary>
			<returns>An integer containing the content length.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.DeletionId">
			<summary>Gets the deletion identifier of an item.</summary>
			<returns>An integer containing the deletion identifier.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.Encoding">
			<summary>Gets the encoding of an item.</summary>
			<returns>An integer containing the encoding.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.HashValue">
			<summary>Gets a hash value for the item.</summary>
			<returns>A byte array containing the hash value.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ItemId">
			<summary>Gets the identifier of the item.</summary>
			<returns>An integer containing the identifier.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ItemType">
			<summary>Gets the type of an item.</summary>
			<returns>An <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemType"></see> enumeration value indicating the type of the item.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ServerItem">
			<summary>Gets the server associated with an item.</summary>
			<returns>A string containing the server name.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.VersionControlServer">
			<summary>Gets or sets the source control repository containing this item.</summary>
			<returns>A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer"></see> containing the item.</returns>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSet">
			<summary>Represents a set of items.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemSet.ToString">
			<summary>Converts an item set to a string representation.</summary>
			<returns>A string representing the item set.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemSet.Items">
			<summary>Gets the items in a set.</summary>
			<returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> members of the set.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemSet.Pattern">
			<summary>Gets the pattern for an item set.</summary>
			<returns>A string containing the pattern.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemSet.QueryPath">
			<summary>Gets the query path for an item set.</summary>
			<returns>A string containing the query path.</returns>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemType">
			<summary>Used to request items.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ItemType.Any">
			<summary>The requested file can be either a file or a folder.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ItemType.File">
			<summary>The requested item if a file.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ItemType.Folder">
			<summary>The requested item is a folder.</summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec">
			<summary>Specifies a version based on a label.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec.#ctor(System.String)">
			<summary>Initializes a new label.</summary>
			<param name="label">The name of the label.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec.#ctor(System.String,System.String)">
			<summary>Initializes a new label.</summary>
			<param name="scope">The scope of the label, which may be null.</param>
			<param name="label">The name of the label.</param>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec.Identifier">
			<summary>Identifier for this version spec in command-line usage.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec.Equals(System.Object)">
			<summary>Determines whether this instance is equal with the specified instance.</summary>
			<returns>true if the other instance matches this one; otherwise false.</returns>
			<param name="obj">The other instance to compare with.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec.GetHashCode">
			<summary>Generates a hash code for this instance.</summary>
			<returns>Returns a hash code for this instance.</returns>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.LatestVersionSpec">
			<summary>Specifies the latest version.</summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.LockLevel">
			<summary>Valid locking levels.</summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus">
			<summary>The result of a Get, Unshelve, or Merge operation.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.Conflict">
			<summary>There was a version conflict doing the operation.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.Deleting">
			<summary>The item exists in the workspace, but will now be deleted.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.Getting">
			<summary>Occurs from a Get operation on an item that does not presently exist in the current workspace.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.Replacing">
			<summary>Replaces an item that already exists in the current workspace.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.SourceDirectoryNotEmpty">
			<summary>Files or folders still exist in the source directory. Usually occurs when you attempt to delete a source directory folder that is not empty.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.SourceWritable">
			<summary>The existing file is writable. Usually occurs during an operation, such as a rename, and the existing file is not read-only when it was expected to be read-only.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.TargetIsDirectory">
			<summary>The target is a directory and not a file. Usually occurs in an attempt to get a file to a given path, but a directory exists at the destination with the same name as the requested file.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.TargetLocalPending">
			<summary>There is already a pending change on the local target item. Can occur during an unshelve operation.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.TargetWritable">
			<summary>The target file is writable. Usually occurs during an operation, such as a rename, and the existing file is not read-only when it was expected to be read-only.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.UnableToRefresh">
			<summary>Unable to refresh an item because of a pending edit on the item. Usually occurs during a forced fetch of an item, for example using get /force, but fails because of the pending edit. </summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange">
			<summary>Represents a pending change that is part of a changeset.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.DownloadBaseFile(System.String)">
			<summary>Downloads the content for the base (original) file in the conflict</summary>
			<param name="localFileName">Location to save the downloaded file contents.</param>
			<exception cref="InvalidOperationException">Thrown if there is no base file, which is only valid for conflicts of type <see cref="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Merge"></see>.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.DownloadShelvedFile(System.String)">
			<summary>Downloads the shelved content for this pending change.</summary>
			<param name="localFileName">Specifies where to save the downloaded file contents.</param>
			<exception cref="InvalidOperationException">Thrown if this is not a shelved pending change.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.GetLocalizedStringForChangeType(Microsoft.TeamFoundation.VersionControl.Client.ChangeType)">
			<summary>Creates for the <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.Change.ChangeType"></see> a localized string suitable for displaying to the user.</summary>
			<returns>Returns the localized string. The string may be empty if <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.Change.ChangeType"></see> is <see cref="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.None"></see>.</returns>
			<param name="type">The change type to convert to a localized string.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.GetLocalizedStringForChangeType(Microsoft.TeamFoundation.VersionControl.Client.ChangeType,System.Boolean)">
			<summary>Creates for the <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.Change.ChangeType"></see> a localized string suitable for displaying to the user.</summary>
			<returns>Returns the localized string. The string may be empty if <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.Change.ChangeType"></see> is <see cref="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.None"></see>.</returns>
			<param name="showLock">Puts the lock change type into the string.</param>
			<param name="type">The change type to convert to a localized string.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.GetLocalizedStringForItemType(Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
			<summary>Creates for the <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.Change.ItemType"></see> a localized string suitable for displaying to the user.</summary>
			<returns>Returns the localized string. The string may be empty if <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.Change.ItemType"></see> is <see cref="F:Microsoft.TeamFoundation.VersionControl.Client.ItemType.None"></see>.</returns>
			<param name="type">The item type to convert to a localized string.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.GetLocalizedStringForLockLevel(Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
			<summary>Creates for the <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.LockLevel"></see> a localized string suitable for displaying to the user.</summary>
			<returns>Returns the localized string. The string may be empty if <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.Change.LockLevel"></see> is <see cref="F:Microsoft.TeamFoundation.VersionControl.Client.LockLevel.None"></see>.</returns>
			<param name="lockLevel">The lock level to convert to a localized string.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ToLocalItems(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[])">
			<summary>Gets an array of <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.LocalItem"></see> path strings from an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange"></see>s.</summary>
			<returns>Returns a string array of local items.</returns>
			<param name="pendingChanges"><see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange"></see> array from which to fetch local items.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ToServerItems(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[])">
			<summary>Gets an array of <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ServerItem"></see> path strings from an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange"></see>s.</summary>
			<returns>Returns a string array of server items.</returns>
			<param name="pendingChanges"><see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange"></see> array from which to fetch local items.</param>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsAdd">
			<summary>Gets the flag that declares if this pending change is an add.</summary>
			<returns>true if this is a pending add; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsBranch">
			<summary>Gets the flag that declares if this pending change is a branch.</summary>
			<returns>true if this pending change is a branch; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsDelete">
			<summary>Gets the flag that declares if this pending change is a delete.</summary>
			<returns>true if this pending change is a delete; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsEdit">
			<summary>Gets the flag that declares if this pending change is an edit.</summary>
			<returns>true if this pending change is an edit; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsEncoding">
			<summary>Gets the flag that declares if this pending change is an encoding change.</summary>
			<returns>true if this pending change is an encoding change; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsLocalItemDelete">
			<summary>Gets the flag that declares if this pending change or undone change will delete a local file or folder.</summary>
			<returns>true if this pending change or undone change will delete a local file or folder; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsLock">
			<summary>Gets the flag that declares if this pending change has a lock operation.</summary>
			<returns>true if this pending change has a lock operation; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsMerge">
			<summary>Gets the flag that declares if this pending change is a merge operation.</summary>
			<returns>true if this pending change is a merge operation; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsRename">
			<summary>Gets the flag that declares if this pending change is a rename operation.</summary>
			<returns>true if this pending change is a rename operation; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsUndelete">
			<summary>Gets the flag that declares if this pending change is an undelete operation.</summary>
			<returns>true if this pending change is an undelete operation; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsUnshelvedChange">
			<summary>Gets the flag that declares if this is a pending change from unshelving a shelveset.</summary>
			<returns>true if this is a pending change from unshelving a shelveset; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.Undone">
			<summary>Gets the flag to indicate whether this change has been undone.</summary>
			<returns>true if the change has been undone; otherwise false.</returns>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.RecursionType">
			<summary>Possible values for the @recursion flag.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.RecursionType.Full">
			<summary>Return specified item and all descendants.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.RecursionType.None">
			<summary>Return only the specified item.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.RecursionType.OneLevel">
			<summary>Return the specified item and its direct children.</summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.RequestType">
			<summary>Used when pending changes or showing other pending changes. Shows the type of request in the pending change.</summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.Resolution">
			<summary>These are the different ways to resolve a conflict.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.Resolution.OverwriteLocal">
			<summary>This resolution is only used on the client.</summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.ResolutionOptions">
			<summary>These options control the conflict resolution process.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin.HasMatchingCheckinItem(Microsoft.TeamFoundation.VersionControl.Client.PendingChange)">
			<returns>true if there is a check item that matches the pending change; otherwise false.</returns>
			<param name="pc">The pending change.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin.UpdateCheckinItems(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],Microsoft.TeamFoundation.VersionControl.Client.PendingChange[])">
			<param name="uncheckedPendingChanges">the set of unchecked pending changes to remove from the overall set of checked items.</param>
			<param name="checkedPendingChanges">the set of checked pending changes to merge with the overall set of checked items.</param>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset">
			<summary>A server-side collection of pending changes and associated metadata.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.#ctor(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,System.String)">
			<summary>Initializes a Shelveset object for shelving changes.</summary>
			<param name="owner">The owner of the shelveset.</param>
			<param name="sourceControl">Source control object representing the repository on which the shelveset will be created.</param>
			<param name="name">The name of the shelveset.</param>
			<exception cref="InvalidShelvesetName">Thrown when the shelveset is not a legal name.</exception>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.ShelvingOptions">
			<summary>Used when you perform a shelve operation.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ShelvingOptions.Move">
			<summary>After the shelve operation completes, undo the change from the local workspace. This moves the pending changes from your workspace to the shelveset.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ShelvingOptions.None">
			<summary>Perform a normal shelve operation. Prompts if the shelveset already exists and leaves the pending changes in your workspace.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.ShelvingOptions.Replace">
			<summary>Forces the new shelveset to overwrites the existing shelveset without prompting.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider.GetArtifactDocument(System.Uri)">
			<param name="artifactUri">Uri for the document being retrieved.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider.GetArtifactType(System.Uri)">
			<returns>Returns the type of artifact this Uri represents. Returns <see cref="F:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactType.None"></see> if the Uri does not represent a known version control artifact type.</returns>
			<param name="artifactUri">The Uri to determine the type.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider.GetChangeset(System.Uri)">
			<returns>Returns the referenced <see cref=":Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see> object.</returns>
			<param name="artifactUri">Uri for the <see cref=":Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see> being retrieved.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider.GetLabel(System.Uri)">
			<returns>The referenced label object.</returns>
			<param name="artifactUri">Uri for the label being retrieved.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider.GetLatestItemVersion(System.Uri)">
			<returns>The referenced item.</returns>
			<param name="artifactUri">Uri for the item being retrieved.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider.GetVersionedItem(System.Uri)">
			<returns>The referenced item.</returns>
			<param name="artifactUri">Uri for the item being retrieved.</param>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel">
			<summary>Represents a version control label.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel.#ctor(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,System.String,System.String,System.String)">
			<summary>Initializes a representation of a version control label to be sent to the server.</summary>
			<param name="comment">The comment for the lablel.</param>
			<param name="scope">The scope of the label.</param>
			<param name="ownerName">The owner of the label.</param>
			<param name="sourceControl">The repository in which the label resides.</param>
			<param name="name">The name of the label.</param>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer">
			<summary>The VersionControlServer object represents the repository.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.AfterWorkItemsUpdated">
			<summary>Occurs when updating work items with a checkin.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.BeforeCheckinPendingChange">
			<summary>Occurs when checking in a pending change.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.BeforeDeleteWorkspace">
			<summary>Occurs when deleting an existing workspace.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.BeforeShelvePendingChange">
			<summary>Occurs before shelving a pending change.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.BeforeWorkItemsUpdate">
			<summary>Occurs before updating work items with a checkin.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CommitCheckin">
			<summary>Occurs when a new checkin is committed.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CommitShelveset">
			<summary>Occurs when a new shelveset is created.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.Conflict">
			<summary>Occurs when a conflict is created.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreatedWorkspace">
			<summary>Occurs when a workspace is created.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeletedShelveset">
			<summary>Occurs when a shelveset is deleted.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeletedWorkspace">
			<summary>Occurs when a workspace is deleted.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.Getting">
			<summary>Occurs during a Get operation.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.Merging">
			<summary>Occurs during a merge operation.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.NewPendingChange">
			<summary>Occurs when a new pending change is created.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.NonFatalError">
			<summary>Occurs when errors are detected that do not prevent the operation from completing.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.OperationFinished">
			<summary>Occurs when an operation finishes, such as when a set of changes finish pending.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.OperationStarting">
			<summary>Occurs when an operation begins, such as when a set of changes begin pending.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ResolvedConflict">
			<summary>Occurs when a conflict is resolved.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UndonePendingChange">
			<summary>Occurs when an existing pending change is undone.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UnshelveShelveset">
			<summary>Occurs when unshelving a shelveset.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UpdatedWorkspace">
			<summary>Occurs when an existing workspace is updated.</summary>
		</member>
		<member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.WorkItemUpdated">
			<summary>Occurs when a work item has been updated with a checkin.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateLabel(Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel,Microsoft.TeamFoundation.VersionControl.Client.LabelItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.LabelChildOption)">
			<summary>Creates or updates a label.</summary>
			<returns>Returns the results of the label operations.</returns>
			<param name="options"><see cref="T:Microsoft.TeamFoundation.VersionControl.Client.LabelChildOption"></see> describing how to handle existing items in a label.</param>
			<param name="itemSpecs">The item specs included in the label.</param>
			<param name="label">The label definition to create or update.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateTeamProjectFolder(Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions)">
			<summary>Creates a team project root folder and configures the folder's settings, permissions, and checkin notes.</summary>
			<param name="options"><see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions"></see> for the creation of the team project folder.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateWorkspace(System.String)">
			<summary>Creates a new workspace.</summary>
			<returns>Returns a reference to a workspace object which represents the new workspace.</returns>
			<param name="name">The name of this workspace. Must be unique for this owner.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateWorkspace(System.String,System.String)">
			<summary>Creates a new workspace.</summary>
			<returns>Returns a reference to a workspace object which represents the new workspace.</returns>
			<param name="owner">The owner of this workspace.</param>
			<param name="name">The name of this workspace. Must be unique for this owner.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateWorkspace(System.String,System.String,System.String)">
			<summary>Creates a new workspace.</summary>
			<returns>Returns a reference to a workspace object which represents the new workspace.</returns>
			<param name="comment">A descriptive comment for the workspace.</param>
			<param name="owner">The owner of this workspace.</param>
			<param name="name">The name of this workspace. Must be unique for this owner.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateWorkspace(System.String,System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[])">
			<summary>Creates a new workspace.</summary>
			<returns>Returns a reference to a workspace object which represents the new workspace.</returns>
			<param name="comment">A descriptive comment for the workspace.</param>
			<param name="owner">The owner of this workspace.</param>
			<param name="mappings">An array of working folders to be established for the workspace.</param>
			<param name="name">The name of this workspace. Must be unique for this owner.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateWorkspace(System.String,System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[],System.String)">
			<summary>Creates a new workspace.</summary>
			<returns>Returns a reference to a workspace object which represents the new workspace.</returns>
			<param name="comment">A descriptive comment for the workspace.</param>
			<param name="owner">The owner of this workspace.</param>
			<param name="computer">The computer on which the workspace will exist.</param>
			<param name="mappings">An array of working folders to be established for the workspace.</param>
			<param name="name">The name of this workspace. Must be unique for this owner.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeleteLabel(System.String,System.String)">
			<summary>Deletes the workspace with the specified name and owner.</summary>
			<returns>true if the workspace was deleted; false if the delete was canceled.</returns>
			<param name="labelName">The name of the workspace to delete.</param>
			<param name="labelScope">The owner of the workspace to delete.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeleteShelveset(Microsoft.TeamFoundation.VersionControl.Client.Shelveset)">
			<summary>Removes a shelveset from the server.</summary>
			<param name="shelveset">The shelveset to remove.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeleteShelveset(System.String,System.String)">
			<summary>Removes a shelveset from the server.</summary>
			<param name="shelvesetOwner">The owner of the shelveset to remove.</param>
			<param name="shelvesetName">The name of the shelveset to remove.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeleteWorkspace(System.String,System.String)">
			<summary>Deletes the workspace with the specified name and owner.</summary>
			<returns>true if the workspace was deleted; false if the delete was canceled.</returns>
			<param name="workspaceOwner">The owner of the workspace to delete.</param>
			<param name="workspaceName">The name of the workspace to delete.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DownloadFile(System.String,System.String)">
			<summary>Downloads the latest version of a file from the server and places its contents in a local file.</summary>
			<param name="localFileName">The local path where the file's contents should be stored.</param>
			<param name="serverPath">The repository path to the file to download.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DownloadFile(System.String,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.String)">
			<summary>Downloads the latest version of a file from the server and places its contents in a local file.</summary>
			<param name="version">The version of the file to be downloaded.</param>
			<param name="deletionId">The non-zero deletion ID of the file if it has been deleted.</param>
			<param name="localFileName">The local path where the file's contents should be stored.</param>
			<param name="serverPath">The repository path to the file to download.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetAllCheckinNoteFieldNames">
			<summary>Returns a list of all of the checkin note fields that have ever been used in this database.</summary>
			<returns>List of checkin note field names.</returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetAllTeamProjects(System.Boolean)">
			<summary>Gets the team projects in that are in the repository.</summary>
			<returns>The team projects in the repository.</returns>
			<param name="refresh">If true, refresh the team project cache by calling the server; otherwise, return all cached team projects.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetBranchHistory(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
			<summary>Returns the branch history for the requested items.</summary>
			<returns>Returns an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem"></see> arrays.</returns>
			<param name="version">The version of the items.</param>
			<param name="itemSpecs">The array of requested item specifiers.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetChangeset(System.Int32)">
			<summary>Retrieves the details of a changeset.</summary>
			<returns>Returns a reference to the specified changeset object.</returns>
			<param name="changesetId">The numeric ID for the changeset being retrieved.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetChangeset(System.Int32,System.Boolean,System.Boolean)">
			<summary>Retrieves the details of a changeset.</summary>
			<param name="includeChanges">If true, the server will include the changes in the changeset; otherwise, only the metadata will be returned.</param>
			<param name="changesetId">The numeric ID for the changeset being retrieved.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetCheckinNoteDefinitions(Microsoft.TeamFoundation.VersionControl.Client.TeamProject[])">
			<summary>Returns the field definitions supported for checkin note data.</summary>
			<returns><see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition"></see> array that is a union of all the fields of the server items.</returns>
			<param name="teamProjects">An array of team projects to search against.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetCheckinNoteDefinitionsForServerPaths(System.String[])">
			<summary>Returns the field definitions supported for checkin note data.</summary>
			<returns>Returns a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition"></see> array that is a union of the fields of the server items.</returns>
			<param name="serverItems">An array of server items to search against.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetCheckinPoliciesForServerPaths(System.String[])">
			<summary>Returns the list of check in policies for the specified team projects.</summary>
			<returns>Returns The list of policies.</returns>
			<param name="serverItems">The Server items to get the policies for.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetEffectiveGlobalPermissions(System.String)">
			<summary>Computes the global permissions for a user.</summary>
			<returns>Returns an array of permission names.</returns>
			<param name="userName">Name of user to check for permissions.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetEffectivePermissions(System.String,System.String)">
			<summary>Computes the permissions for a user against a particular item. Applies the allow and deny lists, inheritance, and group membership rules to come up with a simple list of permissions the user has.</summary>
			<returns>Returns an array of permission names.</returns>
			<param name="userName">Name of user to check for permissions.</param>
			<param name="item">The Item to check. This can be a server or a local path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetExtendedItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
			<summary>Retrieves a list of extended items in the repository that match the specified criteria.</summary>
			<returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem"></see> arrays, each containing the matching <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem"></see> instances associated with each specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec"></see>.</returns>
			<param name="itemType">Indicates whether to return files, folders, or both.</param>
			<param name="itemSpecs">The item specifiers for the item or items being listed. These may be located on the server or the local machine.</param>
			<param name="deletedState">Indicates whether to return deleted items, non-deleted items, or both.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetExtendedItems(System.String,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
			<summary>Retrieves a list of extended items in the repository that match the specified criteria.</summary>
			<returns>Returns an T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem array that contains the matching <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem"></see> instances.</returns>
			<param name="itemType">Indicates whether to return files, folders, or both.</param>
			<param name="path">The path to the item or items being listed. These may be located on the server or the local machine.</param>
			<param name="deletedState">Indicates whether to return deleted items, non-deleted items, or both.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetFileTypes">
			<summary>Gets the list of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.FileType"></see>s registered on the server.</summary>
			<returns>Returns the file types known to the server.</returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetGlobalPermissions(System.String[])">
			<summary>Gets the global permissions for the selected users in the repository.</summary>
			<returns>Returns the permissions from the repository.</returns>
			<param name="identityNames">The user or group names. To return all identities, use null.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.String)">
			<summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> object for the path specified.</summary>
			<returns>Returns the requested <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>. If the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> is not found, an exception is thrown.</returns>
			<param name="path">The path to the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> being listed, which may be on a server or on the local machine.</param>
			<exception cref="ArgumentException">Thrown if there is a wildcard character in path.</exception>
			<exception cref="VersionControlException">Thrown if the item was not found.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.Int32,System.Int32)">
			<summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> from the repository based on <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ItemId"></see> and <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see>.</summary>
			<returns>Returns the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> if the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> was found; otherwise null.</returns>
			<param name="changesetNumber">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see> version to retrieve.</param>
			<param name="itemId">The identifier of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
			<summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> object for the path specified.</summary>
			<returns>Returns the requested <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>. If the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> is not found, an exception is thrown.</returns>
			<param name="version">The version being listed.</param>
			<param name="path">The path to the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> being listed, which may be on a server or on the local machine.</param>
			<exception cref="ArgumentException">Thrown if there is a wildcard character in path.</exception>
			<exception cref="VersionControlException">Thrown if the item was not found.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.Int32,System.Int32,System.Boolean)">
			<summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> from the repository based on <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ItemId"></see> and <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see>.</summary>
			<returns>Returns the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> if the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> was found; otherwise null.</returns>
			<param name="changesetNumber">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see> version to retrieve.</param>
			<param name="itemId">The identifier of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32)">
			<summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> object for the path specified.</summary>
			<returns>Returns the requested <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>. If the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> is not found, an exception is thrown.</returns>
			<param name="version">The version being listed.</param>
			<param name="deletionId">The deletion ID of the specified item.</param>
			<param name="path">The path to the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> being listed, which may be on a server or on the local machine.</param>
			<exception cref="ArgumentException">Thrown if there is a wildcard character in path.</exception>
			<exception cref="VersionControlException">Thrown if the item was not found.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,System.Boolean)">
			<summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> object for the path specified.</summary>
			<returns>Returns the requested <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>. If the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> is not found, an exception is thrown.</returns>
			<param name="version">The version being listed.</param>
			<param name="deletionId">The deletion ID of the specified item.</param>
			<param name="path">The path to the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> being listed, which may be on a server or on the local machine.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
			<exception cref="ArgumentException">Thrown if there is a wildcard character in path.</exception>
			<exception cref="VersionControlException">Thrown if the item was not found.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.String)">
			<summary>Retrieves a list of all <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s in the repository that match the specified path.</summary>
			<returns>Returns an <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSet"></see> containing a collection of matching Items.</returns>
			<param name="path">The path to the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> or <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s being listed, which may be on a server or on the local machine.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.Int32[],System.Int32)">
			<summary>Retrieves a list of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s from the repository, based on <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ItemId"></see> and <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see>.</summary>
			<returns>Returns an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s.</returns>
			<param name="changesetNumber"><see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see> version to retrieve.</param>
			<param name="itemIds"><see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> identifiers to retrieve.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Retrieves a list of all <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s in the repository that match the specified path.</summary>
			<returns>Returns an <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSet"></see> containing a collection of matching Items.</returns>
			<param name="path">The path to the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> or <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s being listed, which may be on a server or on the local machine.</param>
			<param name="recursion">A flag indicating the items should be listed from within the subfolders of path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.Int32[],System.Int32,System.Boolean)">
			<summary>Retrieves a list of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s from the repository, based on <see cref="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ItemId"></see> and <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see>.</summary>
			<returns>Returns an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s.</returns>
			<param name="changesetNumber"><see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see> version to retrieve.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
			<param name="itemIds"><see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> identifiers to retrieve.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Retrieves a list of all <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s in the repository that match the specified path and version.</summary>
			<returns>Returns an <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSet"></see> containing a collection of matching Items.</returns>
			<param name="version">The version being listed.</param>
			<param name="path">The path to the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> or <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s being listed, which may be on a server or on the local machine.</param>
			<param name="recursion">A flag indicating the items should be listed from within the subfolders of path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
			<summary>Retrieves a list of all <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s in the repository that match the given item specifiers.</summary>
			<returns>Returns an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSet"></see> objects that contain collections of matching <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s.</returns>
			<param name="version">The version being listed.</param>
			<param name="itemType">A flag representing whether to return files, folders, or both.</param>
			<param name="itemSpecs">The item specifiers for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> or <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s being listed, which may be on a server or on the local machine.</param>
			<param name="deletedState">A flag representing whether to return deleted items, non-deleted items, or both.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.Boolean)">
			<summary>Retrieves a list of all <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s in the repository that match the given item specifiers.</summary>
			<returns>Returns an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSet"></see> objects that contain collections of matching <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s.</returns>
			<param name="itemSpec">The item specifiers for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> or <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s being listed, which may be on a server or on the local machine.</param>
			<param name="itemType">A flag representing whether to return files, folders, or both.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
			<param name="version">The version being listed.</param>
			<param name="deletedState">A flag representing whether to return deleted items, non-deleted items, or both.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.Boolean)">
			<summary>Retrieves a list of all <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s in the repository that match the given item specifiers.</summary>
			<returns>Returns an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSet"></see> objects that contain collections of matching <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s.</returns>
			<param name="version">The version being listed.</param>
			<param name="itemType">A flag representing whether to return files, folders, or both.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
			<param name="itemSpecs">The item specifiers for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> or <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s being listed, which may be on a server or on the local machine.</param>
			<param name="deletedState">A flag representing whether to return deleted items, non-deleted items, or both.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
			<summary>Retrieves a list of all <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s in the repository that match the specified path and version.</summary>
			<returns>Returns an <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSet"></see> containing a collection of matching Items.</returns>
			<param name="version">The version being listed.</param>
			<param name="itemType">A flag representing whether to return files, folders, or both.</param>
			<param name="path">The path to the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> or <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s being listed, which may be on a server or on the local machine.</param>
			<param name="recursion">A flag indicating the items should be listed from within the subfolders of path.</param>
			<param name="deletedState">A flag representing whether to return deleted items, non-deleted items, or both.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.Boolean)">
			<summary>Retrieves a list of all <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s in the repository that match the specified path and version.</summary>
			<returns>Returns an <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSet"></see> containing a collection of matching Items.</returns>
			<param name="version">The version being listed.</param>
			<param name="itemType">A flag representing whether to return files, folders, or both.</param>
			<param name="path">The path to the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see> or <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item"></see>s being listed, which may be on a server or on the local machine.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
			<param name="recursion">A flag indicating the items should be listed from within the subfolders of path.</param>
			<param name="deletedState">A flag representing whether to return deleted items, non-deleted items, or both.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetLatestChangesetId">
			<summary>Retrieves the changeset ID for the latest changeset in the repository.</summary>
			<returns>Returns the latest <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see> ID.<see cref="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ChangesetId"></see></returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetMergeCandidates(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Gets the merge candidates for merging between the requested items.</summary>
			<returns>Returns an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.MergeCandidate"></see> objects.</returns>
			<param name="targetPath">The local or server path of the target of the potential merge.</param>
			<param name="sourcePath">The local or server path of the source of the potential merge.</param>
			<param name="recursion">A flag indicating the merge candidates should be listed from within the subfolders of the sourcePath and targetPath.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPendingChange(System.Int32)">
			<summary>Retrieves a pending change from repository, based on pending change ID.</summary>
			<returns>Returns the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange"></see> if one is found that matches the ID; otherwise null.</returns>
			<param name="pendingChangeId">Pending change identifier.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPendingChange(System.Int32,System.Boolean)">
			<summary>Retrieves a pending change from repository, based on pending change ID.</summary>
			<returns>Returns the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange"></see> if one is found that matches the ID; otherwise null.</returns>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
			<param name="pendingChangeId">Pending change identifier.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPendingChanges(System.Int32[])">
			<summary>Retrieves a list of pending changes from the repository, based on pending change ID. </summary>
			<returns>Returns an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange"></see>s.</returns>
			<param name="pendingChangeIds">Pending change identifiers.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPendingChanges(System.Int32[],System.Boolean)">
			<param name="pendingChangeIds">Pending change identifiers.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPendingSets(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Gets the pending changes for the specified query.</summary>
			<returns>Returns an array of pending sets with the pending changes for the server items.</returns>
			<param name="items">The paths to query for pending changes.</param>
			<param name="recursion">A flag indicating whether subfolders should be included in the search.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPermissions(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Gets the permissions for items in the repository.</summary>
			<returns>Returns the permissions from the repository.</returns>
			<param name="items">The items to query for permissions.</param>
			<param name="recursion">A flag indicating whether subfolders should be included in the search.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPermissions(System.String[],System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Gets the permissions for items in the repository.</summary>
			<returns>Returns the permissions from the repository.</returns>
			<param name="items">The items to query for permissions.</param>
			<param name="identityNames">The user or group names (may be null).</param>
			<param name="recursion">A flag indicating whether subfolders should be included in the search.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetTeamProject(System.String)">
			<summary>Gets the team project in the repository having the corresponding name.</summary>
			<returns>Returns the team project.</returns>
			<param name="name">The name of the team project being requested.</param>
			<exception cref="VersionControlException">Thrown if the team project does not exist in the repository.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetTeamProjectForServerPath(System.String)">
			<summary>Gets the team project for the specified server path.</summary>
			<returns>Returns the team project.</returns>
			<param name="serverPath">The server path from which to get the team project.</param>
			<exception cref="VersionControlException">Thrown if the team project does not exist in the repository.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetTeamProjectsForServerPaths(System.String[])">
			<summary>Gets the team projects in the repository with the specified paths.</summary>
			<returns>Returns an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject"></see>s.</returns>
			<param name="serverPaths">The server paths from which to get the team projects.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetWorkspace(System.String)">
			<summary>Gets the workspace for the given path.</summary>
			<returns>The workspace the path or null.</returns>
			<param name="localPath">The path to query.</param>
			<exception cref="ItemNotMappedException">Thrown if the workspace is not found.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetWorkspace(Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo)">
			<summary>Retrieve a workspace from the name and owner in the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see>.</summary>
			<returns>A reference to the workspace object which represents the workspace with the specified name and owner.</returns>
			<param name="workspaceInfo">The workspace information object.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetWorkspace(System.String,System.String)">
			<summary>Retrieve a workspace with the specified name and owner.</summary>
			<param name="workspaceOwner">The owner of the workspace.</param>
			<param name="workspaceName">The name of the workspace.</param>
			<exception cref="WorkspaceNotFoundException">Thrown if the workspace was not found on the server.</exception>
			<exception cref="ItemNotMappedException">Thrown if the workspace is not found on the local computer.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryHistory(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,System.Boolean,System.Boolean)">
			<summary>Retrieves an enumerable collection of Changesets matching the specified items and versions.</summary>
			<returns>A collection of Changeset objects that match the query.</returns>
			<param name="includeChanges">A flag that, if true, includes the individual item changes with the changesets; otherwise, only changeset metadata is included.</param>
			<param name="versionTo">The end of a version range for which history should be queried. Use null to end with the latest changeset.</param>
			<param name="version">The version of the specified item for which history should be queried.</param>
			<param name="user">The user for whom history should be queried. Use null to search for any user.</param>
			<param name="versionFrom">The beginning of a version range for which history should be queried. Use null to begin with the first changeset.</param>
			<param name="deletionId">The unique deletion ID for the item, if it is deleted. If it is not deleted, specify zero.</param>
			<param name="recursion">A flag determining whether history should be recursively queried.</param>
			<param name="maxCount">The maximum number of history entries that should be returned Use Int32.MaxValue to get all changes.</param>
			<param name="slotMode">A flag that specifies how history entries are searched. If true, the returned history entries may reflect multiple different items that have at one point occupied the requested path in the repository. If false, the returned history entries will reflect the single item currently occupying the requested path, regardless of whether it previously occupied the requested path in its historical version.</param>
			<param name="path">The path to an item for which history should be queried. This parameter can include wildcards.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryHistory(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
			<summary>Retrieves an enumerable collection of Changesets matching the specified items and versions.</summary>
			<returns>A collection of Changeset objects that match the query.</returns>
			<param name="includeChanges">A flag that, if true, includes the individual item changes with the changesets; otherwise, only changeset metadata is included.</param>
			<param name="versionTo">The end of a version range for which history should be queried. Use null to end with the latest changeset.</param>
			<param name="user">The user for whom history should be queried. Use null to search for any user.</param>
			<param name="version">The version of the specified item for which history should be queried.</param>
			<param name="versionFrom">The beginning of a version range for which history should be queried. Use null to begin with the first changeset.</param>
			<param name="deletionId">The unique deletion ID for the item, if it is deleted. If it is not deleted, specify zero.</param>
			<param name="recursion">A flag determining whether history should be recursively queried.</param>
			<param name="maxCount">The maximum number of history entries that should be returned Use Int32.MaxValue to get all changes.</param>
			<param name="slotMode">A flag that specifies how history entries are searched. If true, the returned history entries may reflect multiple different items that have at one point occupied the requested path in the repository. If false, the returned history entries will reflect the single item currently occupying the requested path, regardless of whether it previously occupied the requested path in its historical version.</param>
			<param name="path">The path to an item for which history should be queried. This parameter can include wildcards.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryLabels(System.String,System.String,System.String,System.Boolean)">
			<summary>Queries for a list of labels applied to items in the repository.</summary>
			<returns>The label information for each label selected by the query.</returns>
			<param name="owner">The person who created the label. This option can be null to match all owners.</param>
			<param name="labelScope">The repository path denoting the scope at which the label is defined.</param>
			<param name="labelName">The name of the label being queried.</param>
			<param name="includeItems">If true, the items in the labels will be included.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryLabels(System.String,System.String,System.String,System.Boolean,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
			<summary>Queries for a list of labels applied to items in the repository.</summary>
			<returns>The label information for each label selected by the query.</returns>
			<param name="owner">The person who created the label. This option can be null to match all owners.</param>
			<param name="filterItem">If not-null, only returns labels containing this item from the server path or local path.</param>
			<param name="labelScope">The repository path denoting the scope at which the label is defined.</param>
			<param name="labelName">The name of the label being queried.</param>
			<param name="includeItems">If true, the items in the labels will be included.</param>
			<param name="versionFilterItem"><see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec"></see> for filterItem. Ignored if filterItem is null.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryLabels(System.String,System.String,System.String,System.Boolean,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Boolean)">
			<summary>Queries for a list of labels applied to items in the repository.</summary>
			<returns>The label information for each label selected by the query.</returns>
			<param name="owner">The person who created the label. This option can be null to match all owners.</param>
			<param name="filterItem">If not-null, only returns labels containing this item from the server path or local path.</param>
			<param name="labelScope">The repository path denoting the scope at which the label is defined.</param>
			<param name="labelName">The name of the label being queried.</param>
			<param name="includeItems">If true, the items in the labels will be included.</param>
			<param name="versionFilterItem"><see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec"></see> for filterItem. Ignored if filterItem is null.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryMerges(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Queries the merge history of the requested item with an optional source.</summary>
			<returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMerge"></see> objects.</returns>
			<param name="versionTo">End of the merge history range. Use null for "end of time"; only date, latest, and changeset version specs are supported by the server.</param>
			<param name="sourceVersion">The version of the optional source spec.</param>
			<param name="targetVersion">The version of the required target spec.</param>
			<param name="targetPath">The local or server path of the required target item.</param>
			<param name="versionFrom">Start of the merge history range. Use null for "start of time"; only date, latest, and changeset version specs are supported by the server.</param>
			<param name="recursion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.RecursionType"></see> to apply to the target search.</param>
			<param name="sourcePath">The local or server path of the optional source item.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryPendingSets(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.String,System.String)">
			<summary>Gets the pending changes for the specified query.</summary>
			<returns>An array of pending sets with the pending changes for the server items.</returns>
			<param name="queryWorkspaceName">The workspace name, which may be null.</param>
			<param name="itemSpecs">The items.</param>
			<param name="queryUserName">The user name, which may be null. queryUserName is the workspace owner if the workspace name is not null.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryPendingSets(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.String,System.String,System.Boolean)">
			<summary>Gets the pending changes for the specified query.</summary>
			<returns>An array of pending sets with the pending changes for the server items.</returns>
			<param name="queryWorkspaceName">The workspace name, which may be null.</param>
			<param name="itemSpecs">The items.</param>
			<param name="queryUserName">The user name, which may be null. queryUserName is the workspace owner if the workspace name is not null.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryPendingSets(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,System.String)">
			<summary>Gets the pending changes for the specified query.</summary>
			<returns>An array of pending sets with the pending changes for the server items.</returns>
			<param name="queryWorkspaceName">The workspace name, which may be null.</param>
			<param name="queryUserName">The user name, which may be null. queryUserName is the workspace owner if the workspace name is not null.</param>
			<param name="items">The paths to query for pending changes.</param>
			<param name="recursion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.RecursionType"></see> to apply to the target search.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvedChanges(Microsoft.TeamFoundation.VersionControl.Client.Shelveset)">
			<summary>Gets the shelved changes for the specified query.</summary>
			<returns>An array of pending sets with the pending changes for the shelved changes.</returns>
			<param name="shelveset">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset"></see> to query.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvedChanges(Microsoft.TeamFoundation.VersionControl.Client.Shelveset,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
			<summary>Gets the shelved changes for the specified query.</summary>
			<returns>An array of pending sets with the pending changes for the shelved changes.</returns>
			<param name="itemSpecs">The items to query.</param>
			<param name="shelveset">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset"></see> to query.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvedChanges(System.String,System.String)">
			<summary>Gets the shelved changes for the specified query.</summary>
			<returns>An array of pending sets with the pending changes for the shelved changes.</returns>
			<param name="shelvesetName">The shelveset name, which may be null.</param>
			<param name="shelvesetOwner">The user name, which may be null. If shelvesetName is not null, shelvesetOwner is the shelveset owner.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvedChanges(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
			<summary>Gets the shelved changes for the specified query.</summary>
			<returns>An array of pending sets with the pending changes for the shelved changes.</returns>
			<param name="itemSpecs">The items to query.</param>
			<param name="shelvesetName">The shelveset name, which may be null.</param>
			<param name="shelvesetOwner">The user name, which may be null. If shelvesetName is not null, shelvesetOwner is the shelveset owner.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvedChanges(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean)">
			<summary>Gets the shelved changes for the specified query.</summary>
			<returns>An array of pending sets with the pending changes for the shelved changes.</returns>
			<param name="itemSpecs">The items to query.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
			<param name="shelvesetName">The shelveset name, which may be null.</param>
			<param name="shelvesetOwner">The user name, which may be null. If shelvesetName is not null, shelvesetOwner is the shelveset owner.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvesets(System.String,System.String)">
			<summary>Queries for a list of shelvesets with a given name and/or owner.</summary>
			<returns>Returns an array of shelveset objects that match the query.</returns>
			<param name="shelvesetName">The name of the shelveset to look for. Can be null to match all shelvesets.</param>
			<param name="shelvesetOwner">The owner of the shelvesets to look for. Can be null to match all users.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryWorkspaces(System.String,System.String,System.String)">
			<summary>Retrieves a list of workspaces that matches the specified name, owner, and computer.</summary>
			<returns>Returns an array of matching Workspaces.</returns>
			<param name="computer">The name of the host computer. Use null for all computers.</param>
			<param name="workspaceOwner">The username of the owner. Use null for all users.</param>
			<param name="workspaceName">The name of the workspace. Use null for all workspace names.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.RenameCheckinNoteFieldName(System.String,System.String,System.String)">
			<summary>Renames all instances of a specified checkin note field within a specified team project folder.</summary>
			<param name="newName">New checkin note field name.</param>
			<param name="oldName">Old checkin note field name.</param>
			<param name="path">The path to a team project folder.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ServerItemExists(System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
			<summary>Returns true if the server item of the specified type exists in the repository.</summary>
			<returns>true if the item is in the repository; otherwise false.</returns>
			<param name="path">The path to check, may be server or local.</param>
			<param name="itemType">The type of the item.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ServerItemExists(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
			<summary>Returns true if the server item of the specified type exists in the repository.</summary>
			<returns>true if the item is in the repository; otherwise false.</returns>
			<param name="deletedState">Whether the item must be non-deleted, deleted, or either.</param>
			<param name="version">The version of the item to check.</param>
			<param name="path">The path to check, may be server or local.</param>
			<param name="itemType">The type of the item.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetFileTypes(Microsoft.TeamFoundation.VersionControl.Client.FileType[])">
			<summary>Sets the file types registered on the server.</summary>
			<param name="fileTypes">The new set of file types to be known to the server.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetGlobalPermissions(Microsoft.TeamFoundation.VersionControl.Client.PermissionChange[])">
			<summary>Sets the permissions for items in the repository.</summary>
			<returns>Returns a list of successful changes.</returns>
			<param name="permissionChanges">The list of changes to send to the server.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetPermissions(Microsoft.TeamFoundation.VersionControl.Client.SecurityChange[])">
			<summary>Sets the permissions for items in the repository.</summary>
			<returns>Returns a list of successful changes.</returns>
			<param name="securityChanges">The list of changes to send to the server.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.TryGetTeamProject(System.String)">
			<summary>Gets the specified team project from the repository.</summary>
			<returns>Returns the team project if found; otherwise null.</returns>
			<param name="name">The name of the requested team project.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.TryGetTeamProjectForServerPath(System.String)">
			<summary>Gets the team project for the specified server path.</summary>
			<returns>Returns the team project if found; otherwise null.</returns>
			<param name="serverPath">The server path for which to get the team project.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.TryGetWorkspace(System.String)">
			<summary>Gets the workspace for the given path.</summary>
			<param name="localPath">A local path for which a workspace is desired.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UnlabelItem(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
			<summary>Removes a label that is applied to an item.</summary>
			<returns>Returns an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.LabelResult"></see> objects , which indicate the results of the label operations.</returns>
			<param name="itemSpecs">An array of items to remove from the label.</param>
			<param name="version">The version of the specified items from which you wish to remove the label.</param>
			<param name="labelScope">The repository path denoting the scope at which the label is defined.</param>
			<param name="labelName">The name of the label being removed.</param>
			<exception cref="ArgumentNullException">Thrown if version is null.</exception>
			<exception cref="ArgumentException">Thrown if labelName or itemSpecs are empty or null.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UpdateUserName">
			<summary>Update the display name for this user on the server.</summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec">
			<summary>A utility class for parsing version specifications.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.DeletionModifier">
			<summary>Deletion identifier. This is not a version spec, but rather a version modifier.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.RangeSeparator">
			<summary>Character used to separate the components of a version specification range.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Separator">
			<summary>Character used to separate a filename from its version specification.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.AddDeletionModifierIfNecessary(System.String,System.Int32)">
			<summary>Formats a path to include the deletion identifier if it is non-zero.</summary>
			<returns>Returns a string which represents the original path, potentially with a formatted deletion modifier added.</returns>
			<param name="deletionId">The deletion id.</param>
			<param name="path">The path. path should not already include the deletion identifier.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Format(System.String)">
			<summary>Formats a server or local path with the version specifier.</summary>
			<returns>Returns a version string which represents the path and version.</returns>
			<param name="path">Server or local path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.FormatRange(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
			<summary>Formats a server or local path with the version range specified.</summary>
			<returns>Returns a version string which represents the path and version range.</returns>
			<param name="to">End of the version range.</param>
			<param name="path">Server or local path.</param>
			<param name="from">Beginning of the version range.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Parse(System.String,System.String)">
			<summary>Converts a version string into an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec"></see> objects.</summary>
			<returns>Returns an array of version specifications.</returns>
			<param name="versionSpec">Version specification to encapsulate.</param>
			<param name="user">The current user (only used by workspace version specs).</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.ParseSingleSpec(System.String,System.String)">
			<summary>Converts a version string with no range specifier to a <see cref="VersionSpec"></see> object.</summary>
			<returns>Returns converted version specification.</returns>
			<param name="versionSpec">Version specification to encapsulate.</param>
			<param name="user">The current user (only used by workspace version specs).</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.ParseVersionedFileSpec(System.String,System.String,System.String@,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec[]@)">
			<summary>Parse a versioned file spec from the "filename;version" form.</summary>
			<param name="fileName">Returned file name.</param>
			<param name="spec">The versioned file spec to parse.</param>
			<param name="versions">Returned <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec"></see> array.</param>
			<param name="user">The current user (only used by workspace version specs).</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.ParseVersionedFileSpec(System.String,System.String,System.Int32@,System.String@,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec[]@)">
			<summary>Parse a versioned file spec of the form filename;version or filename;version;deletionID.</summary>
			<param name="fileName">Returned file name.</param>
			<param name="spec">The versioned file spec to parse.</param>
			<param name="versions">Returned <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec"></see> array.</param>
			<param name="user">The current user (only used by workspace version specs).</param>
			<param name="deletionId">Returned deletion id (orphan id).</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.ReorderVersionSpecs(Microsoft.TeamFoundation.VersionControl.Client.VersionSpec@,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec@)">
			<summary>Reorders <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec"></see> instances in into the correct order.</summary>
			<returns>true if the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec"></see> instances were reversed; otherwise false.</returns>
			<param name="End"><see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec"></see> that will be after start.</param>
			<param name="Start"><see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec"></see> that will be before end.</param>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Latest">
			<summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec"></see> that is the latest version requested from the repository.</summary>
			<returns>A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec"></see> instance which indicates the latest version.</returns>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder">
			<summary>This class represents a working folder setting.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.#ctor(System.String,System.String)">
			<summary>Creates a working folder object that represents a mapping of serverItem to localItem.</summary>
			<param name="localItem">Local item for the server item.</param>
			<param name="serverItem">Server item being mapped.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.#ctor(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderType)">
			<summary>Creates a working folder object.</summary>
			<param name="type">Type of mapping to create.</param>
			<param name="localItem">Local item for server item; may be null if the server item is cloaked.</param>
			<param name="serverItem">Server item being mapped.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.Equals(System.Object)">
			<summary>Compares this instance to another <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder"></see> instance for equality.</summary>
			<returns>true if the two objects are equal; otherwise false.</returns>
			<param name="obj">The other instance.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.GetHashCode">
			<summary>Generates a hash code for this instance.</summary>
			<returns>Returns the hash code.</returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.op_Equality(Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder)">
			<summary>Compares two <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder"></see> instances for equality.</summary>
			<returns>true if the two objects are equal; otherwise false.</returns>
			<param name="wf2">The second <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder"></see>.</param>
			<param name="wf1">The first <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder"></see>.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.op_Inequality(Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder)">
			<summary>Compares two <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder"></see> instances for inequality.</summary>
			<returns>false if the two objects are equal; otherwise true.</returns>
			<param name="wf2">The second <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder"></see>.</param>
			<param name="wf1">The first <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder"></see>.</param>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderType">
			<summary>Used to describe working folder entries. Each entry is either a map or a cloak.</summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace">
			<summary>Handler for <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see> changes.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.CheckIn(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],System.String)">
			<summary>Checks in a set of pending changes.</summary>
			<returns>Returns the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see> number created by the Checkin.</returns>
			<param name="changes">The list of pending changes to be committed.</param>
			<param name="comment">The comment describing the changes.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.CheckIn(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],System.String,Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo[],Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo)">
			<summary>Checks in a set of pending changes.</summary>
			<returns>Returns the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see> number created by the Checkin.</returns>
			<param name="workItemChanges">List of work item changes to occur with this checkin.</param>
			<param name="checkinNote">Any applicable checkin notes data.</param>
			<param name="policyOverride">Details of any checkin policies that have been overridden.</param>
			<param name="changes">The list of pending changes to be committed.</param>
			<param name="comment">The comment describing the changes.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.CheckIn(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo[],Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo)">
			<summary>Checks in a set of pending changes.</summary>
			<returns>Returns the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see> number created by the Checkin.</returns>
			<param name="workItemChanges">List of work item changes to occur with this checkin.</param>
			<param name="checkinNote">Any applicable checkin notes data.</param>
			<param name="author">If non-null, this identity will be listed in history for the committed changeset. The user running this operation must have the CheckinOther permission.</param>
			<param name="policyOverride">If non-null, policy failures are being overridden.</param>
			<param name="changes">List of changes to check in.</param>
			<param name="comment">Comment to go along with the checkin.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.CheckIn(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo[],Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo,Microsoft.TeamFoundation.VersionControl.Client.CheckinOptions)">
			<summary>Checks in a set of pending changes.</summary>
			<returns>Returns the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see> number created by the Checkin.</returns>
			<param name="workItemChanges">List of work item changes to occur with this checkin.</param>
			<param name="checkinNote">Any applicable checkin notes data.</param>
			<param name="author">If non-null, this identity will be listed in history for the committed changeset. The user running this operation must have the CheckinOther permission.</param>
			<param name="policyOverride">If non-null, policy failures are being overridden.</param>
			<param name="checkinOptions">Per-checkin options that affect event generation and checkin author validation.</param>
			<param name="changes">List of changes to check in.</param>
			<param name="comment">Comment to go along with the checkin.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Cloak(System.String)">
			<summary>Marks a file or folder in the repository as being excluded from this workspace.</summary>
			<param name="serverPath">The repository path to the folder being excluded.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.CreateMapping(Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder)">
			<summary>Adds a working file or folder mapping that associates the specified server path with a location on the local disk.</summary>
			<param name="mapping">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder"></see> object associating a server path with a local path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Delete">
			<summary>Deletes this workspace.</summary>
			<returns>true if the workspace was successfully deleted; otherwise false.</returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.DeleteMapping(Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder)">
			<summary>Removes the mapping of a working folder from the workspace.</summary>
			<param name="mapping">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder"></see> object associating a server path with a local path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Equals(System.Object)">
			<summary>Returns true if the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> objects are equal according to repository, name, and owner.</summary>
			<returns>true if the repository, name, and owner match; otherwise false.</returns>
			<param name="obj">The other <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see> to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Equals(Microsoft.TeamFoundation.VersionControl.Client.Workspace,Microsoft.TeamFoundation.VersionControl.Client.Workspace)">
			<summary>Returns true if the given <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> objects are equal according to repository, name, and owner.</summary>
			<returns>true if the repository, name, and owner match; otherwise false.</returns>
			<param name="y">The second workspace to compare.</param>
			<param name="x">The first workspace to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.EvaluateCheckin(Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationOptions,Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],System.String,Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo[])">
			<summary>Evaluates a set of pending changes to see if they are ready to check in.</summary>
			<returns>The results of the checkin evaluation.</returns>
			<param name="comment">Comment to go along with the checkin.</param>
			<param name="workItemChanges">List of work item changes to occur with this checkin.</param>
			<param name="checkinNote">Any applicable checkin notes data.</param>
			<param name="changes">List of changes to evaluate.</param>
			<param name="options">Selects what to check, for example notes, policies, or conflicts.</param>
			<param name="allChanges">All pending changes for the workspace, which is needed by checkin policies.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.FormatWorkspaceNameForException(Microsoft.TeamFoundation.VersionControl.Client.Workspace)">
			<summary>Formats the conflicting workspace name for exception when there is a conflict. The owner of the workspace is included when the owner is different.</summary>
			<returns>The formatted workspace name.</returns>
			<param name="conflictingWorkspace">The workspace that conflicts.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get">
			<summary>Requests that the server update the current workspace with the latest version of all mapped items.</summary>
			<returns>Returns a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.GetStatus"></see> object which describes the number of operations, conflicts, and errors that occurred while processing the Get.</returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(Microsoft.TeamFoundation.VersionControl.Client.GetRequest,Microsoft.TeamFoundation.VersionControl.Client.GetOptions)">
			<summary>Requests that the server update the current workspace with the latest version of all mapped items.</summary>
			<returns>Returns a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.GetStatus"></see> object which describes the number of operations, conflicts, and errors that occurred while processing the Get.</returns>
			<param name="request">The item and version being requested.</param>
			<param name="options">Options for the get.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(Microsoft.TeamFoundation.VersionControl.Client.GetRequest[],Microsoft.TeamFoundation.VersionControl.Client.GetOptions)">
			<summary>Requests that the server update the current workspace with the latest version of all mapped items.</summary>
			<returns>Returns a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.GetStatus"></see> object which describes the number of operations, conflicts, and errors that occurred while processing the Get.</returns>
			<param name="requests">The items and versions being requested.</param>
			<param name="options">Options for the get.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.GetOptions)">
			<summary>Requests that the server update the current workspace with the latest version of all mapped items.</summary>
			<returns>Returns a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.GetStatus"></see> object which describes the number of operations, conflicts, and errors that occurred while processing the Get.</returns>
			<param name="version">The version of the items being requested.</param>
			<param name="options">Options for the get.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(Microsoft.TeamFoundation.VersionControl.Client.GetRequest,Microsoft.TeamFoundation.VersionControl.Client.GetOptions,Microsoft.TeamFoundation.VersionControl.Client.GetFilterCallback,System.Object)">
			<summary>Requests that the server update the current workspace with the latest version of all mapped items.</summary>
			<returns>Returns a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.GetStatus"></see> object which describes the number of operations, conflicts, and errors that occurred while processing the Get.</returns>
			<param name="filterCallback">A delegate to be called with the operations obtained from the server before the operations are processed.</param>
			<param name="request">The item and version being requested.</param>
			<param name="options">Options for the get.</param>
			<param name="userData">A user-specified object passed to the delegate.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(Microsoft.TeamFoundation.VersionControl.Client.GetRequest[],Microsoft.TeamFoundation.VersionControl.Client.GetOptions,Microsoft.TeamFoundation.VersionControl.Client.GetFilterCallback,System.Object)">
			<summary>Requests that the server update the current workspace with the latest version of all mapped items.</summary>
			<returns>Returns a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.GetStatus"></see> object which describes the number of operations, conflicts, and errors that occurred while processing the Get.</returns>
			<param name="filterCallback">A delegate to be called with the operations obtained from the server before the operations are processed.</param>
			<param name="requests">The items and versions being requested.</param>
			<param name="options">Options for the get.</param>
			<param name="userData">A user-specified object passed to the delegate.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(System.String[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.GetOptions)">
			<summary>Requests that the server update the current workspace with the latest version of all mapped items.</summary>
			<returns>Returns a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.GetStatus"></see> object which describes the number of operations, conflicts, and errors that occurred while processing the Get.</returns>
			<param name="version">The version of the items being requested.</param>
			<param name="items">The items and versions being requested.</param>
			<param name="recursion">The level of recursion desired.</param>
			<param name="options">Options for the get.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetExtendedItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
			<summary>For each input <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec"></see>, retrieves a list of extended items in the repository that match the specified criteria. </summary>
			<returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem"></see> arrays, each containing the matching <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem"></see> instances associated with each specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec"></see>.</returns>
			<param name="itemSpecs">The item specifiers for the item or items being listed, which may be on the server or the local computer.</param>
			<param name="deletedState">A flag representing whether to return deleted items, non-deleted items, or both.</param>
			<param name="itemType">A flag representing whether to return files, folders, or both.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetHashCode">
			<summary>Returns the hash code.</summary>
			<returns>Returns the hash code.</returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetHashCode(Microsoft.TeamFoundation.VersionControl.Client.Workspace)">
			<summary>Returns the hash code for the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see>.</summary>
			<returns>Returns the hash code.</returns>
			<param name="obj">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see> to query.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetLocalItemForServerItem(System.String)">
			<summary>Gets the local item path for a server item path.</summary>
			<returns>The corresponding local path.</returns>
			<param name="serverItem">The server item.</param>
			<exception cref="ItemCloakedException">Thrown if the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see> is cloaked.</exception>
			<exception cref="VersionControlException">Thrown if the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see> is deleted.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges">
			<summary>Gets all of the pending changes for the items in this workspace.</summary>
			<returns>Returns the pending changes.</returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
			<summary>Gets all of the pending changes for these items and potentially subitems in this workspace.</summary>
			<returns>Returns the pending changes for the specified items in this workspace.</returns>
			<param name="itemSpecs">A list of item specifications for the items being queried.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(System.String)">
			<summary>Gets all of the pending changes for this item in this workspace.</summary>
			<returns>The pending changes for the specified item in this workspace.</returns>
			<param name="item">The path to the item being queried. The path may be a local path or a server path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(System.String[])">
			<summary>Gets all of the pending changes for these items in this workspace.</summary>
			<returns>The pending changes for the specified items in this workspace.</returns>
			<param name="items">The list of paths to the items being queried. The paths may be local paths or server paths.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean)">
			<summary>Gets all of the pending changes for these items and potentially subitems in this workspace.</summary>
			<returns>Returns the pending changes for the specified items in this workspace.</returns>
			<param name="itemSpecs">A list of item specifications for the items being queried.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Gets all of the pending changes for this item and potentially subitems in this workspace.</summary>
			<returns>The pending changes for the specified items in this workspace.</returns>
			<param name="item">The path to the item being queried. The path can be a local path or a server path.</param>
			<param name="recursion">The level of recursion desired.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Gets all of the pending changes for these items and potentially subitems in this workspace.</summary>
			<returns>The pending changes for the specified items in this workspace.</returns>
			<param name="items">The paths to the items being queried. The paths can be local paths or server paths.</param>
			<param name="recursion">The level of recursion desired.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.Boolean)">
			<summary>Gets all of the pending changes for this item and potentially subitems in this workspace.</summary>
			<returns>The pending changes for the specified items in this workspace.</returns>
			<param name="item">The path to the item being queried. The path can be a local path or a server path.</param>
			<param name="recursion">The level of recursion desired.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.Boolean)">
			<summary>Gets all of the pending changes for these items and potentially subitems in this workspace.</summary>
			<returns>The pending changes for the specified items in this workspace.</returns>
			<param name="items">The paths to the items being queried. The paths can be local paths or server paths.</param>
			<param name="recursion">The level of recursion desired.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetServerItemForLocalItem(System.String)">
			<summary>Gets the server item path for a local item path. </summary>
			<returns>The corresponding server item.</returns>
			<param name="localItem">The local item.</param>
			<exception cref="ItemCloakedException">Thrown when the server has no mapping for the local item or if the item is cloaked.</exception>
			<exception cref="ItemNotMappedException">Thrown when the local item is not mapped in the local cache.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetTeamProjectForLocalPath(System.String)">
			<summary>Finds and returns the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject"></see> in which a given localPath resides. </summary>
			<returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject"></see> for the specified local path.</returns>
			<param name="localPath">The local path.</param>
			<exception cref="ItemNotMappedException">Thrown when the local item is not mapped in the local cache.</exception>
			<exception cref="ItemCloakedException">Thrown when the path that contains the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject"></see> is cloaked.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetTeamProjectsForLocalPaths(System.String[])">
			<summary>Gets the team projects in the repository with the specified paths. </summary>
			<returns>An array of team projects.</returns>
			<param name="localPaths">The local paths for which to get the team projects.</param>
			<exception cref="ItemNotMappedException">Thrown when the local item is not mapped in the local cache.</exception>
			<exception cref="ItemCloakedException">Thrown when the path that contains the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject"></see> is cloaked.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetWorkingFolderForLocalItem(System.String)">
			<summary>Returns a working folder with the mapping for the local item. </summary>
			<returns>The working folder for the local item.</returns>
			<param name="localItem">The local item.</param>
			<exception cref="ItemNotMappedException">Thrown when the local item is not mapped in the local cache.</exception>
			<exception cref="ItemCloakedException">Thrown when the path that contains the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject"></see> is cloaked.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetWorkingFolderForServerItem(System.String)">
			<summary>Returns a working folder with the mapping for the server item. </summary>
			<returns>The working folder for the server item.</returns>
			<param name="serverItem">The server item.</param>
			<exception cref="ItemNotMappedException">Thrown when the local item is not mapped in the local cache.</exception>
			<exception cref="ItemCloakedException">Thrown when the path that contains the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject"></see> is cloaked.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetWorkingFolderForServerItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[])">
			<summary>Returns a working folder with the mapping for the server item. </summary>
			<returns>The working folder for the server item.</returns>
			<param name="folders">The list of working folders to use in computing the working folder for serverItem.</param>
			<param name="serverItem">The server item.</param>
			<exception cref="ItemNotMappedException">Thrown when the local item is not mapped in the local cache.</exception>
			<exception cref="ItemCloakedException">Thrown when the path that contains the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject"></see> is cloaked.</exception>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.IsLocalPathMapped(System.String)">
			<summary>Returns true if the local path is mapped and not cloaked.</summary>
			<returns>true if the local path is mapped and not cloaked; otherwise false.</returns>
			<param name="localPath">The local path to check.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.IsServerPathMapped(System.String)">
			<summary>Returns true if the server path is mapped and not cloaked.</summary>
			<returns>true if the server path is mapped and not cloaked; otherwise false.</returns>
			<param name="serverPath">The server path to check.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Map(System.String,System.String)">
			<summary>Adds a working file or folder mapping associating the specified server path with a location on the local disk.</summary>
			<param name="serverPath">The repository path to the folder being mapped.</param>
			<param name="localPath">The path to the location being mapped to.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.MatchName(System.String,System.String)">
			<summary>Compares two workspace names and returns true if they match. Comparisons are case insensitive.</summary>
			<returns>true if the names match; otherwise false.</returns>
			<param name="workspaceName1">The first workspace name to compare.</param>
			<param name="workspaceName2">The second workspace name to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.MatchOwnerName(System.String,System.String)">
			<summary>Compares two workspace owners and returns true if they match. Comparisons are case insensitive.</summary>
			<returns>true if the owners match; otherwise false.</returns>
			<param name="workspaceOwnerName1">The first workspace owner to compare.</param>
			<param name="workspaceOwnerName2">The second workspace owner to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Merge(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
			<summary>Performs a merge of the source to the target.</summary>
			<returns>Status information.</returns>
			<param name="versionTo">The ending version, which may be null.</param>
			<param name="targetPath">The target of the merge (local or server path -- must be mapped).</param>
			<param name="versionFrom">The starting version, which may be null.</param>
			<param name="sourcePath">The source of the merge (local or server path).</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Merge(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.MergeOptions)">
			<summary>Performs a merge of the source to the target.</summary>
			<returns>Status information.</returns>
			<param name="versionTo">The ending version, which may be null.</param>
			<param name="lockLevel">The lock level to apply to each item specified by the target.</param>
			<param name="targetPath">The target of the merge (local or server path -- must be mapped).</param>
			<param name="versionFrom">The starting version, which may be null.</param>
			<param name="recursion">The level of recursion desired.</param>
			<param name="mergeOptions">Specifies the merge options.</param>
			<param name="sourcePath">The source of the merge (local or server path).</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.MergeContent(Microsoft.TeamFoundation.VersionControl.Client.Conflict,System.Boolean)">
			<summary>Performs a content merge based on the requested conflict.</summary>
			<returns>true if the merge was successful; otherwise false.</returns>
			<param name="useExternalMergeTool">Whether to use a registered external merge tool.</param>
			<param name="conflict">Conflict to do a content merge for.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String)">
			<summary>Queues files or folders for addition to the repository.</summary>
			<returns>The number of files or folders queued for addition.</returns>
			<param name="path">A list of paths that represent items that should be added. These paths can contain wildcard characters.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String[])">
			<summary>Queues files or folders for addition to the repository.</summary>
			<returns>The number of files or folders queued for addition.</returns>
			<param name="paths">A list of paths that represent items that should be added. These paths can contain wildcard characters.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String,System.Boolean)">
			<summary>Queues files or folders for addition to the repository. </summary>
			<returns>The number of files or folders queued for addition.</returns>
			<param name="isRecursive">A boolean value indicating whether or not to recurse through the specified path.</param>
			<param name="path">A local path that represents the items to be added. This path can contain wildcard characters.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String[],System.Boolean)">
			<summary>Queues files or folders for addition to the repository. </summary>
			<returns>The number of files or folders queued for addition.</returns>
			<param name="paths">A list of paths that represent items that should be added. These paths can contain wildcard characters.</param>
			<param name="isRecursive">A boolean value indicating whether or not to recurse through the specified path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String[],System.Boolean,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
			<summary>Queues files or folders for addition to the repository. </summary>
			<returns>The number of files or folders queued for addition.</returns>
			<param name="paths">A list of paths that represent items that should be added. These paths can contain wildcard characters.</param>
			<param name="lockLevel">The lock level to apply to each file added.</param>
			<param name="isRecursive">A boolean value indicating whether or not to recurse through the specified path.</param>
			<param name="fileType">If non-null, the file type for the new item.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String[],System.Boolean,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean)">
			<summary>Queues files or folders for addition to the repository. </summary>
			<returns>The number of files or folders queued for addition.</returns>
			<param name="paths">A list of paths that represent items that should be added. These paths can contain wildcard characters.</param>
			<param name="treatMissingItemsAsFiles">If true, assumes items missing on disk are files.</param>
			<param name="lockLevel">The lock level to apply to each file added.</param>
			<param name="isRecursive">A boolean value indicating whether or not to recurse through the specified path.</param>
			<param name="fileType">If non-null, the file type for the new item.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendBranch(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
			<summary>Schedules a file or folder for branching.</summary>
			<returns>The number of pending changes.</returns>
			<param name="version">The version to branch.</param>
			<param name="targetPath">The location for the branch that will be created.</param>
			<param name="sourcePath">The item to branch.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendBranch(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean)">
			<summary>Schedules a file or folder for branching.</summary>
			<returns>The number of pending changes.</returns>
			<param name="version">The version to branch.</param>
			<param name="lockLevel">The lock level to apply to each file checked out.</param>
			<param name="targetPath">The location for the branch that will be created.</param>
			<param name="updateDisk">If true, populate the branch on disk; otherwise, the disk is not modified.</param>
			<param name="sourcePath">The item to branch.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendBranch(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean)">
			<summary>Schedules a file or folder for branching.</summary>
			<returns>The number of pending changes.</returns>
			<param name="version">The version to branch.</param>
			<param name="lockLevel">The lock level to apply to each file checked out.</param>
			<param name="targetPath">The location for the branch that will be created.</param>
			<param name="updateDisk">If true, populate the branch on disk; otherwise, the disk is not modified.</param>
			<param name="sourcePath">The item to branch.</param>
			<param name="detectFolderAtTarget">If true, searches to see if a local folder exists at the target location and informs the server if the local folder is found; otherwise, does not check.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String)">
			<summary>Queues files or folders for deletion from the repository.</summary>
			<returns>The number of files or folders queued for deletion.</returns>
			<param name="path">A path, local or server, which represents the items to be deleted. This path can contain wildcard characters.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String[])">
			<summary>Queues files or folders for deletion from the repository.</summary>
			<returns>The number of files or folders queued for deletion.</returns>
			<param name="paths">A list of paths, local or server, representing items to be deleted.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Queues files or folders for deletion from the repository. </summary>
			<returns>The number of files or folders queued for deletion.</returns>
			<param name="recursion">The level of recursion desired.</param>
			<param name="path">A path, local or server, which represents the items to be deleted. This path can contain wildcard characters.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Queues files or folders for deletion from the repository and deletes them in the local workspace. </summary>
			<param name="paths">A list of paths, local or server, representing items to be deleted.</param>
			<param name="recursion">The level of recursion desired.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
			<summary>Queues files or folders for deletion from the repository and deletes them in the local workspace. </summary>
			<returns>The number of files or folders queued for deletion.</returns>
			<param name="paths">A list of paths, local or server, representing items to be deleted.</param>
			<param name="lockLevel">The lock level to apply to each item.</param>
			<param name="recursion">The level of recursion desired.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean)">
			<summary>Queues files or folders for deletion from the repository and deletes them in the local workspace. </summary>
			<returns>The number of files or folders queued for deletion.</returns>
			<param name="paths">A list of paths, local or server, representing items to be deleted.</param>
			<param name="lockLevel">The lock level to apply to each item.</param>
			<param name="recursion">The level of recursion desired.</param>
			<param name="updateDisk">Specifies whether the deleted files should be deleted on the local disk.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String)">
			<summary>Checks out files for editing from the repository.</summary>
			<returns>The number of files checked out.</returns>
			<param name="path">The path, local or server, to the items being checked out. This path may contain wildcard characters.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String[])">
			<summary>Checks out files for editing from the repository.</summary>
			<returns>The number of files checked out.</returns>
			<param name="paths">A list of paths, local or server, to checkout for editing.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Checks out files for editing from the repository.</summary>
			<returns>The number of files checked out.</returns>
			<param name="recursion">The level of recursion desired.</param>
			<param name="path">The path, local or server, to the items being checked out. This path may contain wildcard characters.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Checks out files for editing from the repository.</summary>
			<returns>The number of files checked out.</returns>
			<param name="paths">A list of paths, local or server, to checkout for editing.</param>
			<param name="recursion">The level of recursion desired.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
			<summary>Checks out files for editing from the repository.</summary>
			<returns>The number of files checked out.</returns>
			<param name="paths">A list of paths, local or server, to checkout for editing.</param>
			<param name="lockLevel">The lock level to apply to each file checked out.</param>
			<param name="recursion">The level of recursion desired.</param>
			<param name="fileType">If non-null, the new file type.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendRename(System.String,System.String)">
			<summary>Queues an item for renaming or moving in the repository and renames it locally on disk.</summary>
			<returns>The number of items renamed.</returns>
			<param name="newPath">The new path, local or server, for the item.</param>
			<param name="oldPath">The current path, local or server, to the item being renamed. This path may contain wildcard characters if the destination is a folder.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendRename(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean)">
			<summary>Moves or renames a file or directory.</summary>
			<returns>The number of items renamed.</returns>
			<param name="newPath">The new path, local or server, for the item.</param>
			<param name="lockLevel">The level of locking for the pending change.</param>
			<param name="oldPath">The current path, local or server, to the item being renamed. This path may contain wildcard characters if the destination is a folder.</param>
			<param name="updateDisk">If true, the local disk is updated according to the pending changes; if false, the disk is not modified and changes are not acknowledged.</param>
			<param name="detectFolderAtTarget">If true, look for a local folder existing at the target and tell the server if that is the case; otherwise, do not check.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(System.String,System.Int32)">
			<summary>Queues files or folders for undeletion from the repository and optionally restores them in the current workspace.</summary>
			<returns>The number of pending changes.</returns>
			<param name="deletionId">Deletion ID for the item to undelete.</param>
			<param name="path">The item or items to undelete. Wildcard characters are allowed, and both server and local paths are allowed.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean)">
			<summary>Queues files or folders for undeletion from the repository and optionally restores them in the current workspace.</summary>
			<returns>The number of pending changes.</returns>
			<param name="itemSpecs">A list of deleted items to restore in the repository.</param>
			<param name="lockLevel">The lock level to apply to each item.</param>
			<param name="updateDisk">Specifies whether the undeleted files or folders should be restored on the local disk.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(System.String,System.Int32,System.String)">
			<summary>Queues files or folders for undeletion from the repository and optionally restores them in the current workspace.</summary>
			<returns>The number of pending changes.</returns>
			<param name="newPath">Optional new path for the item to undelete.</param>
			<param name="deletionId">Deletion ID for the item to undelete.</param>
			<param name="path">The item or items to undelete. Wildcard characters are allowed, and both server and local paths are allowed.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean)">
			<summary>Queues files or folders for undeletion from the repository and optionally restores them in the current workspace.</summary>
			<returns>The number of pending changes.</returns>
			<param name="itemSpecs">A list of deleted items to restore in the repository.</param>
			<param name="lockLevel">The lock level to apply to each item.</param>
			<param name="updateDisk">Specifies whether the undeleted files or folders should be restored on the local disk.</param>
			<param name="detectFolderAtTarget">If true, look for a local folder existing at the target and tell the server if that is the case; otherwise, do not check.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(System.String,System.Int32,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean)">
			<summary>Queues files or folders for undeletion from the repository and optionally restores them in the current workspace.</summary>
			<returns>The number of pending changes.</returns>
			<param name="newPath">Optional new path for the item to undelete.</param>
			<param name="lockLevel">The lock level to apply to each item.</param>
			<param name="deletionId">Deletion ID for the item to undelete.</param>
			<param name="path">The item or items to undelete. Wildcard characters are allowed, and both server and local paths are allowed.</param>
			<param name="updateDisk">For undelete, whether to retrieve undeleted items from the repository and create directories on the local disk; when false, the local disk is not changed.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(System.String,System.Int32,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean)">
			<summary>Queues files or folders for undeletion from the repository and optionally restores them in the current workspace.</summary>
			<returns>The number of pending changes.</returns>
			<param name="newPath">Optional new path for the item to undelete.</param>
			<param name="lockLevel">The lock level to apply to each item.</param>
			<param name="deletionId">Deletion ID for the item to undelete.</param>
			<param name="path">The item or items to undelete. Wildcard characters are allowed, and both server and local paths are allowed.</param>
			<param name="updateDisk">For undelete, whether to retrieve undeleted items from the repository and create directories on the local disk; when false, the local disk is not changed.</param>
			<param name="detectFolderAtTarget">If true, look for a local folder existing at the target and tell the server if that is the case; otherwise, do not check.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueryConflicts(System.String[],System.Boolean)">
			<summary>Gets the list of conflicts that match the specified path filters. The source and target local and server paths for each conflict are matched against the specified paths.</summary>
			<returns>The conflicts that match the specified paths.</returns>
			<param name="recursive">When true, the path is recursively matched with the filters.</param>
			<param name="pathFilters">The paths by which to filter the conflicts (local or server paths).</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueryPendingSets(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.String,System.String,System.Boolean)">
			<summary>Gets the pending changes for the specified query.</summary>
			<returns>An array of pending sets with the pending changes for the server items.</returns>
			<param name="queryWorkspaceName">The workspace name, which may be null.</param>
			<param name="itemSpecs">The items.</param>
			<param name="queryUserName">The user name, which is the workspace owner if the workspace name is not null. queryUserName can be null.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueryPendingSets(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,System.String,System.Boolean)">
			<summary>Gets the pending changes for the specified query.</summary>
			<returns>An array of pending sets with the pending changes for the server items.</returns>
			<param name="queryWorkspaceName">The workspace name, which may be null.</param>
			<param name="queryUserName">The user name, which is the workspace owner if the workspace name is not null. queryUserName can be null.</param>
			<param name="items">The paths to query for pending changes.</param>
			<param name="recursion">The level of recursion desired.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueryShelvedChanges(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
			<summary>Gets the shelved changes for the specified query.</summary>
			<returns>An array of pending sets with the pending changes for the shelved changes.</returns>
			<param name="itemSpecs">The items.</param>
			<param name="shelvesetName">The shelveset name, which may be null.</param>
			<param name="shelvesetOwner">The user name (may be null), which is the shelveset owner if the shelveset name is not null.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueryShelvedChanges(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean)">
			<summary>Gets the shelved changes for the specified query.</summary>
			<returns>An array of pending sets with the pending changes for the shelved changes.</returns>
			<param name="itemSpecs">The items.</param>
			<param name="includeDownloadInfo">true to tell the server to include the information needed to download the files.</param>
			<param name="shelvesetName">The shelveset name, which may be null.</param>
			<param name="shelvesetOwner">The user name (may be null), which is the shelveset owner if the shelveset name is not null.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.RefreshMappings">
			<summary>Gets from the server the current set of mappings for this workspace.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.RemoveLocalConflict(Microsoft.TeamFoundation.VersionControl.Client.Conflict)">
			<summary>Removes a local conflict from the server's list of conflicts for this workspace.</summary>
			<param name="conflict">The local conflict.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.ResolveConflict(Microsoft.TeamFoundation.VersionControl.Client.Conflict)">
			<summary>Tries to resolve a conflict according to the conflict's Resolution property. If the the conflict is successfully resolved, the IsResolved property will be true.</summary>
			<param name="conflict">The conflict to resolve.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.ResolveConflict(Microsoft.TeamFoundation.VersionControl.Client.Conflict,Microsoft.TeamFoundation.VersionControl.Client.Conflict[]@)">
			<summary>Tries to resolve a conflict according to the conflict's Resolution property. If the the conflict is successfully resolved, the IsResolved property will be true.</summary>
			<param name="conflict">The conflict to resolve.</param>
			<param name="resolvedConflicts">The other conflicts that were deleted.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SetLock(System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
			<summary>Applies the selected lock level to the specified path.</summary>
			<returns>Number of locks set.</returns>
			<param name="lockLevel">Requested lock for the paths.</param>
			<param name="path">Path to set the lock on.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SetLock(System.String[],Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
			<summary>Applies the selected lock level to the specified paths.</summary>
			<param name="paths">Paths to set the lock on.</param>
			<param name="lockLevel">Requested lock for the paths.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SetLock(System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Applies the selected lock level to the specified path.</summary>
			<returns>Number of locks set.</returns>
			<param name="lockLevel">Requested lock for the paths.</param>
			<param name="recursion">The level of recursion desired.</param>
			<param name="path">Path to set the lock on.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SetLock(System.String[],Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Applies the selected lock level to the specified paths.</summary>
			<returns>Number of locks set.</returns>
			<param name="paths">Paths to set the lock on.</param>
			<param name="lockLevel">Requested lock for the paths.</param>
			<param name="recursion">The level of recursion desired.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Shelve(Microsoft.TeamFoundation.VersionControl.Client.Shelveset,Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],Microsoft.TeamFoundation.VersionControl.Client.ShelvingOptions)">
			<summary>Collects a set of pending changes and shelves them to the server. Shelved changes can be later reproduced as pending changes in this or another workspace.</summary>
			<param name="changes">A list of pending changes to shelve.</param>
			<param name="options">Various options for the shelving command.</param>
			<param name="shelveset">The shelveset (name, owner).</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.System.IComparable.CompareTo(System.Object)">
			<summary>Compares two workspace objects, first comparing the repository URLs, then comparing the workspace names, and finally comparing owners.</summary>
			<returns>Returns -1, 0, 1 for this workspace being less than, equal to, or greater than the specified workspace, respectively.</returns>
			<param name="obj">The workspace to which this one will be compared.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetLocalItemForServerItem(System.String)">
			<summary>Gets the local item path for a server item path. This method does not throw <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException"></see> or <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemCloakedException"></see>.</summary>
			<returns>Returns the corresponding local path. If the local path is not mapped or cloaked, returns null.</returns>
			<param name="serverItem">The server item.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetServerItemForLocalItem(System.String)">
			<summary>Gets the server item path for a local item path. This method does not throw <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException"></see> or <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemCloakedException"></see>.</summary>
			<returns>Returns the corresponding server item. If the server item is not mapped or cloaked, returns null.</returns>
			<param name="localItem">The local item.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetWorkingFolderForLocalItem(System.String)">
			<summary>Returns a working folder with the mapping for the local item.</summary>
			<returns>The working folder for the local item or null if there is no working folder.</returns>
			<param name="localItem">The local item.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetWorkingFolderForServerItem(System.String)">
			<summary>Returns a working folder with the mapping for the server item.</summary>
			<returns>The working folder for the server item.</returns>
			<param name="serverItem">The server item.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetWorkingFolderForServerItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[])">
			<summary>Returns a working folder with the mapping for the server item.</summary>
			<returns>The working folder for the server item.</returns>
			<param name="folders">The list of working folders to use in computing the working folder for serverItem.</param>
			<param name="serverItem">The server item.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
			<summary>Undo the pending changes for the specified items. The items may contain wildcard characters.</summary>
			<returns>Returns the number of undone changes.</returns>
			<param name="itemSpecs">The items for which to undo pending changes.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[])">
			<summary>Undo the pending changes for the specified items. The items may contain wildcard characters.</summary>
			<returns>Returns the number of undone changes.</returns>
			<param name="pendingChanges">The pending changes to undo.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(System.String)">
			<summary>Undo the pending changes for the specified item. The item may contain wildcard characters.</summary>
			<returns>Returns the number of undone changes.</returns>
			<param name="item">The item for which to undo pending changes.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(System.String[])">
			<summary>Undo the pending changes for the specified items. The items may contain wildcard characters.</summary>
			<returns>Returns the number of undone changes.</returns>
			<param name="items">The items for which to undo pending changes.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean)">
			<summary>Undo the pending changes for the specified items. The items may contain wildcard characters.</summary>
			<returns>Returns the number of undone changes.</returns>
			<param name="itemSpecs">The items for which to undo pending changes.</param>
			<param name="updateDisk">If true, update the items on disk for the undo; otherwise, the disk is not modified.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Undo the pending changes for the specified item. The item may contain wildcard characters.</summary>
			<returns>Returns the number of undone changes.</returns>
			<param name="item">The item for which to undo pending changes.</param>
			<param name="recursion">The level of recursion desired.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(System.String[],System.Boolean)">
			<summary>Undo the pending changes for the specified items. The items may contain wildcard characters.</summary>
			<returns>Returns the number of undone changes.</returns>
			<param name="items">The items for which to undo pending changes.</param>
			<param name="updateDisk">If true, update the items on disk for the undo; otherwise, the disk is not modified.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
			<summary>Undo the pending changes for the specified items. The items may contain wildcard characters.</summary>
			<param name="items">The items for which to undo pending changes.</param>
			<param name="recursion">The level of recursion desired.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.Boolean)">
			<summary>Undo the pending changes for the specified items. The items may contain wildcard characters.</summary>
			<param name="items">The items for which to undo pending changes.</param>
			<param name="recursion">The level of recursion desired.</param>
			<param name="updateDisk">If true, update the items on disk for the undo; otherwise, the disk is not modified.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Unshelve(System.String,System.String)">
			<summary>Reproduces in this workspace a set of pending changes that have been previously shelved to the server.</summary>
			<returns>The shelveset that was unshelved.</returns>
			<param name="shelvesetName">The name of the shelveset to unshelve.</param>
			<param name="shelvesetOwner">The name of the user who created the shelveset.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Unshelve(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
			<returns>The shelveset that was unshelved.</returns>
			<param name="shelvesetName">The name of the shelveset to unshelve.</param>
			<param name="items">A list of files folders within the shelveset that should be unshelved. Use null to unshelve all changes.</param>
			<param name="shelvesetOwner">The name of the user who created the shelveset.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Unshelve(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.PendingChange[]@)">
			<returns>The shelveset that was unshelved.</returns>
			<param name="shelvesetName">The name of the shelveset to unshelve.</param>
			<param name="items">A list of files folders within the shelveset that should be unshelved. Use null to unshelve all changes.</param>
			<param name="changes">Return the set of unshelved pending changes.</param>
			<param name="shelvesetOwner">The name of the user who created the shelveset.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Update(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[])">
			<summary>Update a workspace. The name, comment, and working folders may be changed. The repository is the one referenced by changedWorkspace (workspaces cannot be moved across repositories).</summary>
			<param name="newComment">The new comment.</param>
			<param name="newName">The new name.</param>
			<param name="newMappings">The new mappings.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.UpdateComputerName">
			<summary>Update the name of the computer in the repository.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.UpdateLastSavedCheckin(Microsoft.TeamFoundation.VersionControl.Client.Shelveset)">
			<summary>Updates the last attempted checkin information with the information from the shelveset.</summary>
			<param name="shelveset">The shelveset.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.UpdateLastSavedCheckin(Microsoft.TeamFoundation.VersionControl.Client.Shelveset,Microsoft.TeamFoundation.VersionControl.Client.PendingChange[])">
			<summary>Updates the last attempted checkin information with the information from the shelveset and makes sure that the specified set of pending changes have a checked state set.</summary>
			<param name="shelveset">The shelveset containing the desired metadata.</param>
			<param name="unshelvedChanges">The pending changes that where unshelved.</param>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.IsDeleted">
			<summary>Gets or sets the flag that indicates whether the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see> has been deleted.</summary>
			<returns>true if the workspace has been deleted; otherwise false.</returns>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.IsLocal">
			<summary>Gets the flag that indicates whether the workspace resides on the local computer.</summary>
			<returns>true if the workspace resides on the local computer; otherwise false.</returns>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo">
			<summary>Holds the properties of a cached local workspace.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.Equals(System.Object)">
			<summary>Returns true if the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> objects are equal according to workspace name, owner, and repository.</summary>
			<returns>true if the two objects are equal; otherwise false.</returns>
			<param name="obj">Other object to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.FormatWorkspaceNameForException(Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo)">
			<summary>Formats the conflicting workspace name for exception when there is a conflict. The owner of the workspace is included when the owner is different.</summary>
			<returns>Returns the formatted workspace name.</returns>
			<param name="conflictingWorkspace">The workspace that conflicts.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.GetHashCode">
			<summary>Gets the hash code for this instance, computed from name, owner, and repository guid.</summary>
			<returns>Returns the hash code.</returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.GetWorkspace(Microsoft.TeamFoundation.Client.TeamFoundationServer)">
			<summary>Get the workspace object that matches this WorkspaceInfo.</summary>
			<returns>Returns the workspace.</returns>
			<param name="tfs">The Team Foundation Server hosting the workspace.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.op_Equality(Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo,Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo)">
			<summary>Returns true if the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> objects are equal according to workspace name, owner, and repository.</summary>
			<returns>true if the two objects are equal; otherwise false.</returns>
			<param name="wsi2">The second <see cref=":Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> object.</param>
			<param name="wsi1">The first <see cref=":Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> object.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.op_Inequality(Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo,Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo)">
			<summary>Returns false if the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> objects are equal according to workspace name, owner, and repository.</summary>
			<returns>false if the two <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> objects are equal; otherwise true.</returns>
			<param name="wsi2">The second <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> object.</param>
			<param name="wsi1">The first <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> object.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.System.IComparable.CompareTo(System.Object)">
			<summary>Compares two <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> objects, first by comparing the server names, then comparing the workspace names, and finally comparing owners.</summary>
			<returns>Returns -1, 0, or 1 respectively, for this <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> being less than, equal to, or greater than the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see>.</returns>
			<param name="obj">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> to which this one will be compared.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.ToString">
			<summary>Return a string instance which reflects this <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see>'s contents.</summary>
			<returns>Returns a string instance which reflects this <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see>'s contents.</returns>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Client.Workstation">
			<summary>A class that represents a machine and the Source Control state on that machine.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.EnsureUpdateWorkspaceInfoCache(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String)">
			<summary>Calls <see cref="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.UpdateWorkspaceInfoCache(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String)"></see> if it has not yet been called for the specified server and owner.</summary>
			<param name="sourceControl">The source control repository.</param>
			<param name="ownerName">The owner of the workspaces.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.EnsureUpdateWorkspaceInfoCache(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,System.TimeSpan)">
			<summary>Calls <see cref="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.UpdateWorkspaceInfoCache(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String)"></see> if it has not yet been called for the specified server and owner.</summary>
			<param name="sourceControl">The source control repository.</param>
			<param name="maxAge">The maximum age of the last request.</param>
			<param name="ownerName">The owner of the workspaces.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.GetAllLocalWorkspaceInfo">
			<summary>Get a list of all cached local workspace info objects.</summary>
			<returns>Returns an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.GetLocalWorkspaceInfo(System.String)">
			<summary>Get the cached local workspace info for the workspace that contains the specified path.</summary>
			<returns>Returns the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> object which describes the containing <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see>, or null if it is not in a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see>.</returns>
			<param name="path">The local path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.GetLocalWorkspaceInfo(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,System.String)">
			<summary>Get the cached local <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> for the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see>.</summary>
			<returns>Returns the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> object which describes the containing <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see>, or null if it is not in a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see>.</returns>
			<param name="sourceControl">The server associated with the specified workspace.</param>
			<param name="workspaceOwner">The workspace owner.</param>
			<param name="workspaceName">The name of the workspace.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.GetLocalWorkspaceInfoRecursively(System.String)">
			<summary>Get the cached local <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see> that contains the specified path.</summary>
			<returns>Returns the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> object which describes the containing <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see>, or null if it is not in a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see>.</returns>
			<param name="path">The local path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.IsExplicitlyMapped(System.String)">
			<summary>Returns true if the specified local path is explicitly mapped in a workspace; for instance, mapped from the root.</summary>
			<returns>true if the path is explicitly mapped in a workspace; otherwise false.</returns>
			<param name="path">The local path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.IsMapped(System.String)">
			<summary>Returns true if the specified local path is mapped in a workspace.</summary>
			<returns>true if the path is mapped in a workspace; otherwise false.</returns>
			<param name="path">The local path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.QueryLocalWorkspaceInfo(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,System.String)">
			<summary>Get a list of cached local workspace info.</summary>
			<returns>An array of matching <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspacenfo"></see> instances.</returns>
			<param name="sourceControl">The source control repository. If null, any repository.</param>
			<param name="workspaceOwner">The workspace owner. If null, any workspace owner.</param>
			<param name="workspaceName">The name of the workspace. If null, all workspaces for this computer.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.RemoveCachedWorkspaceInfo(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer)">
			<summary>Removes from the cache the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see>s for the specified source control repository.</summary>
			<returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> objects that are removed from the cache.</returns>
			<param name="sourceControl">The source control repository.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.RemoveCachedWorkspaceInfo(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String)">
			<summary>Removes from the cache the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see>s for the specified source control repository.</summary>
			<returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> objects that are removed from the cache.</returns>
			<param name="sourceControl">The source control repository.</param>
			<param name="ownerName">The owner of the workspaces.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.RemoveCachedWorkspaceInfo(System.Uri,System.String,System.String)">
			<summary>Removes from the cache the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see> specified.</summary>
			<returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo"></see> objects that are removed from the cache.</returns>
			<param name="serverUri">The URI of the server that contains the workspaces to remove from the cache. Use null to match all servers.</param>
			<param name="workspaceOwner">The owner of the workspace to remove from the cache. Use null to match all owners.</param>
			<param name="workspaceName">The name of the workspace to remove from the cache. Use null to match all workspaces.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.UpdateServerUriReferences(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.Uri)">
			<summary>Updates the cache to reference the specified source control repository using the specified URI, if different.</summary>
			<param name="uri">The URI for the server to use in the cache.</param>
			<param name="sourceControl">The source control repository.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.UpdateWorkspaceInfoCache(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String)">
			<summary>Loads into the cache the workspaces that reside in the specified source control repository and having the specified owner.</summary>
			<param name="sourceControl">The source control repository.</param>
			<param name="ownerName">The owner of the workspaces.</param>
		</member>
	</members>
</doc>